name: Build GmSSL Libraries

# This workflow builds GmSSL dynamic libraries for multiple platforms
# and creates a PR to update the bundled libraries in src/gmssl/_libs/
#
# Trigger manually when you need to update bundled libraries

on:
  workflow_dispatch:
    inputs:
      gmssl_version:
        description: 'GmSSL version to build (e.g., 3.1.1)'
        required: true
        default: '3.1.1'
      gmssl_repo:
        description: 'GmSSL repository URL'
        required: true
        default: 'https://github.com/guanzhi/GmSSL.git'

jobs:
  build-linux:
    name: Build GmSSL for Linux (x86_64)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout GmSSL-Python
        uses: actions/checkout@v4
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
      
      - name: Clone GmSSL
        run: |
          git clone --depth 1 --branch v${{ github.event.inputs.gmssl_version }} \
            ${{ github.event.inputs.gmssl_repo }} GmSSL
      
      - name: Build GmSSL
        run: |
          cd GmSSL
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
      
      - name: Copy library
        run: |
          mkdir -p artifacts/linux-x86_64
          cp GmSSL/build/bin/libgmssl.so.3 artifacts/linux-x86_64/
          
          # Verify library
          file artifacts/linux-x86_64/libgmssl.so.3
          ldd artifacts/linux-x86_64/libgmssl.so.3
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gmssl-linux-x86_64
          path: artifacts/linux-x86_64/libgmssl.so.3
          retention-days: 7

  build-macos-arm64:
    name: Build GmSSL for macOS (arm64)
    runs-on: macos-latest
    
    steps:
      - name: Checkout GmSSL-Python
        uses: actions/checkout@v4
      
      - name: Install build dependencies
        run: |
          brew install cmake
      
      - name: Clone GmSSL
        run: |
          git clone --depth 1 --branch v${{ github.event.inputs.gmssl_version }} \
            ${{ github.event.inputs.gmssl_repo }} GmSSL
      
      - name: Build GmSSL
        run: |
          cd GmSSL
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=arm64
          make -j$(sysctl -n hw.ncpu)
      
      - name: Copy library
        run: |
          mkdir -p artifacts/macos-arm64
          cp GmSSL/build/bin/libgmssl.3.dylib artifacts/macos-arm64/
          
          # Verify library
          file artifacts/macos-arm64/libgmssl.3.dylib
          otool -L artifacts/macos-arm64/libgmssl.3.dylib
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gmssl-macos-arm64
          path: artifacts/macos-arm64/libgmssl.3.dylib
          retention-days: 7

  build-macos-x86_64:
    name: Build GmSSL for macOS (x86_64)
    runs-on: macos-13  # Intel-based runner
    
    steps:
      - name: Checkout GmSSL-Python
        uses: actions/checkout@v4
      
      - name: Install build dependencies
        run: |
          brew install cmake
      
      - name: Clone GmSSL
        run: |
          git clone --depth 1 --branch v${{ github.event.inputs.gmssl_version }} \
            ${{ github.event.inputs.gmssl_repo }} GmSSL
      
      - name: Build GmSSL
        run: |
          cd GmSSL
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=x86_64
          make -j$(sysctl -n hw.ncpu)
      
      - name: Copy library
        run: |
          mkdir -p artifacts/macos-x86_64
          cp GmSSL/build/bin/libgmssl.3.dylib artifacts/macos-x86_64/
          
          # Verify library
          file artifacts/macos-x86_64/libgmssl.3.dylib
          otool -L artifacts/macos-x86_64/libgmssl.3.dylib
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gmssl-macos-x86_64
          path: artifacts/macos-x86_64/libgmssl.3.dylib
          retention-days: 7

  build-windows:
    name: Build GmSSL for Windows (x86_64)
    runs-on: windows-latest
    
    steps:
      - name: Checkout GmSSL-Python
        uses: actions/checkout@v4
      
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2
      
      - name: Clone GmSSL
        run: |
          git clone --depth 1 --branch v${{ github.event.inputs.gmssl_version }} `
            ${{ github.event.inputs.gmssl_repo }} GmSSL
      
      - name: Build GmSSL
        run: |
          cd GmSSL
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -A x64
          cmake --build . --config Release
      
      - name: Copy library
        run: |
          mkdir -p artifacts/windows-x86_64
          cp GmSSL/build/bin/Release/gmssl.dll artifacts/windows-x86_64/
          
          # Verify library exists
          ls -l artifacts/windows-x86_64/gmssl.dll
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gmssl-windows-x86_64
          path: artifacts/windows-x86_64/gmssl.dll
          retention-days: 7

  create-pr:
    name: Create PR with updated libraries
    needs: [build-linux, build-macos-arm64, build-macos-x86_64, build-windows]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout GmSSL-Python
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded-libs
      
      - name: Organize libraries
        run: |
          mkdir -p src/gmssl/_libs
          
          # Linux
          cp downloaded-libs/gmssl-linux-x86_64/libgmssl.so.3 src/gmssl/_libs/
          
          # macOS (create universal binary from arm64 and x86_64)
          lipo -create \
            downloaded-libs/gmssl-macos-arm64/libgmssl.3.dylib \
            downloaded-libs/gmssl-macos-x86_64/libgmssl.3.dylib \
            -output src/gmssl/_libs/libgmssl.3.dylib || \
            cp downloaded-libs/gmssl-macos-arm64/libgmssl.3.dylib src/gmssl/_libs/
          
          # Windows
          cp downloaded-libs/gmssl-windows-x86_64/gmssl.dll src/gmssl/_libs/
          
          # List files
          ls -lh src/gmssl/_libs/
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: |
            chore: update bundled GmSSL libraries to v${{ github.event.inputs.gmssl_version }}
            
            - Linux x86_64: libgmssl.so.3
            - macOS universal: libgmssl.3.dylib (arm64 + x86_64)
            - Windows x86_64: gmssl.dll
            
            Built from: ${{ github.event.inputs.gmssl_repo }}
            Version: v${{ github.event.inputs.gmssl_version }}
          branch: update-gmssl-libs-${{ github.event.inputs.gmssl_version }}
          delete-branch: true
          title: 'chore: update bundled GmSSL libraries to v${{ github.event.inputs.gmssl_version }}'
          body: |
            ## Update Bundled GmSSL Libraries
            
            This PR updates the bundled GmSSL dynamic libraries to version **v${{ github.event.inputs.gmssl_version }}**.
            
            ### Changes
            - ✅ Linux x86_64: `libgmssl.so.3`
            - ✅ macOS universal: `libgmssl.3.dylib` (arm64 + x86_64)
            - ✅ Windows x86_64: `gmssl.dll`
            
            ### Build Information
            - **Source**: ${{ github.event.inputs.gmssl_repo }}
            - **Version**: v${{ github.event.inputs.gmssl_version }}
            - **Built by**: GitHub Actions workflow
            
            ### Testing Checklist
            - [ ] All tests pass on Linux
            - [ ] All tests pass on macOS (arm64)
            - [ ] All tests pass on macOS (x86_64)
            - [ ] All tests pass on Windows
            - [ ] Wheel package includes all libraries
            - [ ] Library loading priority works correctly (system > bundled)
            
            ### License
            GmSSL is licensed under Apache-2.0, same as this project.
            Redistribution is permitted under the terms of the Apache License 2.0.

